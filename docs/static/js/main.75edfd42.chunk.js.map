{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","quotes","quote","author","index","getRandomIndex","length","Math","floor","random","setState","fetch","then","response","json","data","this","twitterURL","className","title","href","rel","target","onClick","bind","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAwEeA,G,kNAjEbC,MAAQ,CACNC,OAAQ,CACN,CACEC,MAAO,yDACPC,OAAQ,oBAGZC,MAAO,G,EAcTC,eAAiB,WACf,IAAMJ,EAAS,EAAKD,MAAMC,OAC1B,GAAIA,EAAOK,OAAS,EAAG,CACrB,IAAMF,EAAQG,KAAKC,MAAMD,KAAKE,SAAWR,EAAOK,QAChD,EAAKI,SAAS,CACZN,Y,kEAjBe,IAAD,OAClBO,MAbF,oIAcKC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKL,SACH,CACET,OAAQc,EAAKd,QAEf,EAAKI,qB,+BAeX,IAEIH,EAFWc,KAAKhB,MAAMC,OACZe,KAAKhB,MAAMI,OAGnBa,EAAU,0CAAsCf,EAAMA,MAA5C,cAAuDA,EAAMC,QAC7E,OACE,qBAAKe,UAAU,UAAf,SACE,sBAAKA,UAAU,MAAf,UACE,gCACE,mBAAGA,UAAU,QAAb,SAAsBhB,EAAMA,QAC5B,uBAAMgB,UAAU,SAAhB,eAA4BhB,EAAMC,OAAlC,WAGF,sBAAKe,UAAU,iBAAf,UACE,oBACEC,MAAM,cACND,UAAU,MACVE,KAAMH,EACNI,IAAI,aACJC,OAAO,SALT,UAOE,mBAAGJ,UAAU,mBAPf,YASA,yBAAQA,UAAU,MAAMK,QAASP,KAAKX,eAAemB,KAAKR,MAA1D,UACE,mBAAGE,UAAU,kBADf,4B,GAxDMO,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75edfd42.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst API =\n  \"//gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nclass App extends React.Component {\n  state = {\n    quotes: [\n      {\n        quote: \"Strive not to be a success, but rather to be of value.\",\n        author: \"Albert Einstein\",\n      },\n    ],\n    index: 0,\n  };\n  componentDidMount() {\n    fetch(API)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState(\n          {\n            quotes: data.quotes,\n          },\n          this.getRandomIndex\n        );\n      });\n  }\n  getRandomIndex = () => {\n    const quotes = this.state.quotes;\n    if (quotes.length > 0) {\n      const index = Math.floor(Math.random() * quotes.length);\n      this.setState({\n        index,\n      });\n    }\n  };\n\n  render() {\n    const quotes = this.state.quotes;\n    const index = this.state.index;\n    let quote = quotes[index];\n\n    const twitterURL = `//twitter.com/intent/tweet?text=${quote.quote} - ${quote.author}`;\n    return (\n      <div className=\"wrapper\">\n        <div className=\"box\">\n          <div>\n            <p className=\"quote\">{quote.quote}</p>\n            <cite className=\"author\">- {quote.author} -</cite>\n          </div>\n\n          <div className=\"button-content\">\n            <a\n              title=\"Tweet this!\"\n              className=\"btn\"\n              href={twitterURL}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              <i className=\"fab fa-twitter\"></i> Tweet\n            </a>\n            <button className=\"btn\" onClick={this.getRandomIndex.bind(this)}>\n              <i className=\"fas fa-random\"></i> New Quote\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}